{"version":3,"file":"main.622725694d6ff92f44b2.hot-update.js","sources":["webpack:///./stories/organisms/Editor/index.tsx"],"sourcesContent":["import React, {\n  useState, useCallback, useEffect,\n} from 'react'\nimport * as Y from 'yjs'\nimport { WebsocketProvider } from 'y-websocket'\nimport { IndexeddbPersistence } from 'y-indexeddb'\nimport { useEditor, EditorContent } from '@tiptap/react'\nimport StarterKit from '@tiptap/starter-kit'\nimport TaskList from '@tiptap/extension-task-list'\nimport TaskItem from '@tiptap/extension-task-item'\nimport Highlight from '@tiptap/extension-highlight'\nimport MenuBar from './MenuBar'\nimport './styles.scss'\n\nconst colors = ['#958DF1', '#F98181', '#FBBC88', '#FAF594', '#70CFF8', '#94FADB', '#B9F18D']\nconst rooms = ['rooms.10', 'rooms.11', 'rooms.12']\nconst names = [\n  'Lea Thompson',\n  'Cyndi Lauper',\n  'Tom Cruise',\n  'Madonna',\n  'Jerry Hall',\n  'Joan Collins',\n  'Winona Ryder',\n  'Christina Applegate',\n  'Alyssa Milano',\n  'Molly Ringwald',\n  'Ally Sheedy',\n  'Debbie Harry',\n  'Olivia Newton-John',\n  'Elton John',\n  'Michael J. Fox',\n  'Axl Rose',\n  'Emilio Estevez',\n  'Ralph Macchio',\n  'Rob Lowe',\n  'Jennifer Grey',\n  'Mickey Rourke',\n  'John Cusack',\n  'Matthew Broderick',\n  'Justine Bateman',\n  'Lisa Bonet',\n]\n\nconst getRandomElement = list => list[Math.floor(Math.random() * list.length)]\n\nconst getRandomRoom = () => getRandomElement(rooms)\nconst getRandomColor = () => getRandomElement(colors)\nconst getRandomName = () => getRandomElement(names)\n\nconst room = getRandomRoom()\n\nconst ydoc = new Y.Doc()\nconst websocketProvider = new WebsocketProvider('wss://connect.tiptap.dev', room, ydoc)\n\nconst getInitialUser = () => {\n  return JSON.parse(localStorage.getItem('currentUser')) || {\n    name: getRandomName(),\n    color: getRandomColor(),\n  }\n}\n\nexport default () => {\n  const [status, setStatus] = useState('connecting')\n  const [currentUser, setCurrentUser] = useState(getInitialUser)\n\n  const editor = useEditor({\n    extensions: [\n      StarterKit.configure({\n        history: false,\n      }),\n      Highlight,\n      TaskList,\n      TaskItem,\n      CharacterCount.configure({\n        limit: 10000,\n      }),\n      Collaboration.configure({\n        document: ydoc,\n      }),\n      CollaborationCursor.configure({\n        provider: websocketProvider,\n      }),\n    ],\n  })\n\n  useEffect(() => {\n    // Store shared data persistently in browser to make offline editing possible\n    const indexeddbProvider = new IndexeddbPersistence(room, ydoc)\n\n    indexeddbProvider.on('synced', () => {\n      console.log('Loaded content from database â€¦')\n    })\n\n    // Update status changes\n    websocketProvider.on('status', event => {\n      setStatus(event.status)\n    })\n  }, [])\n\n  // Save current user to localStorage and emit to editor\n  useEffect(() => {\n    if (editor && currentUser) {\n      localStorage.setItem('currentUser', JSON.stringify(currentUser))\n      editor.chain().focus().updateUser(currentUser).run()\n    }\n  }, [editor, currentUser])\n\n  const setName = useCallback(() => {\n    const name = (window.prompt('Name') || '').trim().substring(0, 32)\n\n    if (name) {\n      return setCurrentUser({ ...currentUser, name })\n    }\n  }, [currentUser])\n\n  return (\n    <div className=\"editor\">\n      {editor && <MenuBar editor={editor} />}\n      <EditorContent className=\"editor__content\" editor={editor} />\n      <div className=\"editor__footer\">\n          <div className={`editor__status editor__status--${status}`}>\n            {status === 'connected'\n              ? `${editor.storage.collaborationCursor.users.length} user${editor.storage.collaborationCursor.users.length === 1 ? '' : 's'} online in ${room}`\n              : 'offline'}\n          </div>\n          <div className=\"editor__name\">\n            <button onClick={setName}>{currentUser.name}</button>\n          </div>\n        </div>\n    </div>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AA2BA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AADA;AAOA;AADA;AAIA;AADA;AAIA;AADA;AAdA;AAoBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AADA;AANA;AAHA;AAeA;;;;A","sourceRoot":""}