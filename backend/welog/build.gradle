buildscript {
    ext {
        queryDslVersion = "4.4.0"
    }
}
plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
    asciidoctorExtensions
}

ext {
    set('snippetsDir', file('build/generated-snippets'))
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 스프링 시큐리티 - 추가 김주현
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    //Spring RestDocs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    // jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.5.2'

    // QueryDSL
    implementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
    annotationProcessor ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
    testImplementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
    testAnnotationProcessor ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

    // javax-annotation
    implementation("javax.annotation:javax.annotation-api:1.3.2")
    annotationProcessor("javax.annotation:javax.annotation-api:1.3.2")

    // mysql
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'mysql:mysql-connector-java'
    // h2
    runtimeOnly 'com.h2database:h2'
    // spring-redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'

}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}
bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'src/main/resources/static/api/docs'
    }
}